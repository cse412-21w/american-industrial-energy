{"version":3,"sources":["co2_emit_conc_temp.js"],"names":["co2TempArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2TempData","then","data","forEach","d","push","drawLinesVegaLite","co2vars","markLine","strokeWidth","encode","x","fieldT","y","fieldQ","repeat","color","fieldN","sort","width","height","column","tempvar","layer","markRule","stroke","markText","align","dx","dy","fontSize","text","datum","hconcat","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"co2_emit_conc_temp.ed963d8c.js","sourceRoot":"..\\src","sourcesContent":["import co2TempData from '../static/co2_emit_conc_temp.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar co2TempArray = [];   // used to store data later\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(co2TempData).then(function(data) {\r\n  data.forEach(function(d){\r\n    co2TempArray.push(d);\r\n  })\r\n  drawLinesVegaLite();\r\n});\r\n\r\n\r\nfunction drawLinesVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n    // your visualization goes here\r\n    const co2vars = vl.markLine({strokeWidth:3})        \r\n          .encode(\r\n              vl.x().fieldT('Year'),\r\n              vl.y().fieldQ(vl.repeat('column')),\r\n              vl.color().fieldN('Emissions path').sort('none'),\r\n              vl.tooltip('Emissions path'),\r\n          )\r\n          .width(300)\r\n          .height(300)\r\n          .repeat({\r\n              column: ['CO2 emissions (Pg/yr)', 'CO2 concentrations (ppm)']\r\n          })\r\n    \r\n    const tempvar = vl.layer(\r\n        vl.markLine({strokeWidth:3})        \r\n            .encode(\r\n                vl.x().fieldT('Year'),\r\n                vl.y().fieldQ(vl.repeat('column')),\r\n                vl.color().fieldN('Emissions path').sort('none'),\r\n                vl.tooltip('Emissions path'),\r\n            ),\r\n        vl.markRule({stroke:'red'})\r\n            .data([{'Temperature':2.0}])\r\n            .encode(\r\n                vl.y().fieldQ('Temperature')\r\n            ),\r\n        vl.markText({\r\n            align: 'center',\r\n            dx: 0,\r\n            dy: -10,\r\n            fontSize: 14,\r\n            color: \"firebrick\"\r\n        })\r\n            .data([0])\r\n            .encode( vl.text().datum(\"Paris Agreement limit: 2ËšC\") )\r\n    )\r\n  .width(300)\r\n  .height(300)\r\n  .repeat({\r\n      column: ['Temperature']\r\n  })\r\n\r\n    vl.data(co2TempArray)\r\n        .hconcat(co2vars,tempvar)\r\n        .render()\r\n        .then(viewElement => {\r\n            // render returns a promise to a DOM element containing the chart\r\n            // viewElement.value contains the Vega View object instance\r\n            document.getElementById('co2_temp').appendChild(viewElement);\r\n        });\r\n}\r\n  \r\n"]}