{"version":3,"sources":["co2_emit_conc_temp.js"],"names":["co2TempArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2TempData","then","data","forEach","d","push","drawLinesVegaLite","markLine","encode","x","fieldT","y","fieldQ","repeat","color","fieldN","width","height","column","render","viewElement","document","getElementById","appendChild"],"mappings":";;AAAA;;;;AAA8D;AAC9D,cAAkB;AACA;;;AAElB,IAAIA,YAAY,GAAG,EAAnB,EAAyB;;AAEzB,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,2BAAP,EAAoBC,IAApB,CAAyB,UAASC,IAAT,EAAe;AACtCA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,YAAY,CAACqB,IAAb,CAAkBD,CAAlB;AACD,GAFD;AAGAE,EAAAA,iBAAiB;AAClB,CALD;;AAQA,SAASA,iBAAT,GAA6B;AAC3B;AACA;AACAZ,EAAAA,EAAE,CAACa,QAAH,GACCL,IADD,CACMlB,YADN,EAECwB,MAFD,CAGId,EAAE,CAACe,CAAH,GAAOC,MAAP,CAAc,MAAd,CAHJ,EAIIhB,EAAE,CAACiB,CAAH,GAAOC,MAAP,CAAclB,EAAE,CAACmB,MAAH,CAAU,QAAV,CAAd,CAJJ,EAKInB,EAAE,CAACoB,KAAH,GAAWC,MAAX,CAAkB,gBAAlB,CALJ,EAMIrB,EAAE,CAACL,OAAH,CAAW,gBAAX,CANJ,EAQC2B,KARD,CAQO,GARP,EASCC,MATD,CASQ,GATR,EAUCJ,MAVD,CAUQ;AACJK,IAAAA,MAAM,EAAE,CAAC,uBAAD,EAA0B,0BAA1B,EACC,aADD;AADJ,GAVR,EAcCC,MAdD,GAeClB,IAfD,CAeM,UAAAmB,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,WAApC,CAAgDH,WAAhD;AACD,GAnBD;AAoBD","file":"co2_emit_conc_temp.ed963d8c.js","sourceRoot":"../src","sourcesContent":["import co2TempData from '../static/co2_emit_conc_temp.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar co2TempArray = [];   // used to store data later\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(co2TempData).then(function(data) {\n  data.forEach(function(d){\n    co2TempArray.push(d);\n  })\n  drawLinesVegaLite();\n});\n\n\nfunction drawLinesVegaLite() {\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\n  // your visualization goes here\n  vl.markLine()\n  .data(co2TempArray)\n  .encode(\n      vl.x().fieldT('Year'),\n      vl.y().fieldQ(vl.repeat('column')),\n      vl.color().fieldN('Emissions path'),\n      vl.tooltip('Emissions path'),\n  )\n  .width(300)\n  .height(300)\n  .repeat({\n      column: ['CO2 emissions (Pg/yr)', 'CO2 concentrations (ppm)',\n               'Temperature']\n  })\n  .render()\n  .then(viewElement => {\n    // render returns a promise to a DOM element containing the chart\n    // viewElement.value contains the Vega View object instance\n    document.getElementById('co2_temp').appendChild(viewElement);\n  });\n}\n  \n"]}