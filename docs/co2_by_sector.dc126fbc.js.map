{"version":3,"sources":["co2_by_sector.js"],"names":["co2BySectorArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2BySectorData","then","data","forEach","d","push","drawPieVegaLite","arc","markArc","encode","theta","fieldQ","sort","stack","color","fieldN","legend","textConfig","radius","align","dy","textName","markText","fontWeight","fontSize","text","value","textValue","layer","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAA6D;AAC7D,cAAkB;AACA;;;AAElB,IAAIA,gBAAgB,GAAG,EAAvB,EAA6B;;AAE7B,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,sBAAP,EAAwBC,IAAxB,CAA6B,UAASC,IAAT,EAAe;AAC1CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,gBAAgB,CAACqB,IAAjB,CAAsBD,CAAtB;AACD,GAFD;AAGAE,EAAAA,eAAe;AAChB,CALD;;AAQA,SAASA,eAAT,GAA2B;AACzB;AACA;AACA,MAAMC,GAAG,GAAGb,EAAE,CAACc,OAAH,GACXN,IADW,CACNlB,gBADM,EAEXyB,MAFW,CAGRf,EAAE,CAACgB,KAAH,GAAWC,MAAX,CAAkB,kBAAlB,EAAsCC,IAAtC,CAA2C,MAA3C,EAAmDC,KAAnD,CAAyD,IAAzD,CAHQ,EAIRnB,EAAE,CAACoB,KAAH,GAAWC,MAAX,CAAkB,QAAlB,EAA4BH,IAA5B,CAAiC,MAAjC,EAAyCI,MAAzC,CAAgD,IAAhD,CAJQ,CAAZ;AAOA,MAAMC,UAAU,GAAG;AAAEC,IAAAA,MAAM,EAAE,MAAM,CAAhB;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCC,IAAAA,EAAE,EAAE;AAAxC,GAAnB;AACA,MAAMC,QAAQ,GAAGd,GAAG,CACjBe,QADc,iCACAL,UADA;AACYM,IAAAA,UAAU,EAAE,MADxB;AACgCC,IAAAA,QAAQ,EAAE;AAD1C,MAEdf,MAFc,CAGXf,EAAE,CAAC+B,IAAH,GAAUV,MAAV,CAAiB,QAAjB,CAHW,EAIXrB,EAAE,CAACoB,KAAH,GAAWY,KAAX,CAAiB,OAAjB,CAJW,CAAjB;AAMA,MAAMC,SAAS,GAAGN,QAAQ,CACvBC,QADe,iCACDL,UADC;AACWG,IAAAA,EAAE,EAAE,CAAC,CADhB;AACmBG,IAAAA,UAAU,EAAE,MAD/B;AACuCC,IAAAA,QAAQ,EAAE;AADjD,MAEff,MAFe,CAERf,EAAE,CAAC+B,IAAH,GAAUd,MAAV,CAAiB,kBAAjB,CAFQ,CAAlB;AAIEjB,EAAAA,EAAE,CAACkC,KAAH,CAASrB,GAAT,EAAcc,QAAd,EAAwBM,SAAxB,EACDE,KADC,CACK,GADL,EAEDC,MAFC,CAEM,GAFN,EAGDC,MAHC,GAID9B,IAJC,CAII,UAAA+B,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,CAAqDH,WAArD;AACD,GARC;AASH","file":"co2_by_sector.dc126fbc.js","sourceRoot":"../src","sourcesContent":["import co2BySectorData from '../static/co2_by_sector.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar co2BySectorArray = [];   // used to store data later\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(co2BySectorData).then(function(data) {\n  data.forEach(function(d){\n    co2BySectorArray.push(d);\n  })\n  drawPieVegaLite();\n});\n\n\nfunction drawPieVegaLite() {\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\n  // your visualization goes here\n  const arc = vl.markArc()\n  .data(co2BySectorArray)\n  .encode(\n      vl.theta().fieldQ('Contribution (%)').sort('none').stack(true),\n      vl.color().fieldN('Sector').sort('none').legend(null)\n  )\n\n  const textConfig = { radius: 400 / 3, align: \"center\", dy: 15 };\n  const textName = arc\n    .markText({ ...textConfig, fontWeight: \"bold\", fontSize: 12 })\n    .encode(\n        vl.text().fieldN('Sector'),\n        vl.color().value(\"Black\")\n    );\n  const textValue = textName\n    .markText({ ...textConfig, dy: -7, fontWeight: \"bold\", fontSize: 14 })\n    .encode(vl.text().fieldQ('Contribution (%)'));\n\n    vl.layer(arc, textName, textValue)    \n  .width(500)\n  .height(500)\n  .render()\n  .then(viewElement => {\n    // render returns a promise to a DOM element containing the chart\n    // viewElement.value contains the Vega View object instance\n    document.getElementById('co2_by_sector').appendChild(viewElement);\n  });\n}\n  \n"]}