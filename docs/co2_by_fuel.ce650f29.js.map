{"version":3,"sources":["co2_by_fuel.js"],"names":["co2ByFuelArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2ByFuelData","then","data","forEach","d","push","drawBarVegaLite","markBar","filled","color","encode","x","fieldN","sort","y","fieldQ","scale","scheme","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAAyD;AACzD,cAAkB;AACA;;;AAElB,IAAIA,cAAc,GAAG,EAArB,EAA2B;;AAE3B,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,oBAAP,EAAsBC,IAAtB,CAA2B,UAASC,IAAT,EAAe;AACxCA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,cAAc,CAACqB,IAAf,CAAoBD,CAApB;AACD,GAFD;AAGAE,EAAAA,eAAe;AAChB,CALD;;AAQA,SAASA,eAAT,GAA2B;AACzB;AACA;AACAZ,EAAAA,EAAE,CAACa,OAAH,CAAW;AAACC,IAAAA,MAAM,EAAC,IAAR;AAAcC,IAAAA,KAAK,EAAC;AAApB,GAAX,EACCP,IADD,CACMlB,cADN,EAEC0B,MAFD,CAGIhB,EAAE,CAACiB,CAAH,GAAOC,MAAP,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,MAA3B,CAHJ,EAIInB,EAAE,CAACoB,CAAH,GAAOC,MAAP,CAAc,KAAd,CAJJ,EAKIrB,EAAE,CAACe,KAAH,GAAWM,MAAX,CAAkB,KAAlB,EAAyBC,KAAzB,CAA+B;AAACC,IAAAA,MAAM,EAAE;AAAT,GAA/B,CALJ,EAMIvB,EAAE,CAACL,OAAH,CAAW,SAAX,CANJ,EAQC6B,KARD,CAQO,GARP,EASCC,MATD,CASQ,GATR,EAUCC,MAVD,GAWCnB,IAXD,CAWM,UAAAoB,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,WAAvC,CAAmDH,WAAnD;AACD,GAfD;AAgBD","file":"co2_by_fuel.ce650f29.js","sourceRoot":"../src","sourcesContent":["import co2ByFuelData from '../static/co2_by_fuel.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar co2ByFuelArray = [];   // used to store data later\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(co2ByFuelData).then(function(data) {\n  data.forEach(function(d){\n    co2ByFuelArray.push(d);\n  })\n  drawBarVegaLite();\n});\n\n\nfunction drawBarVegaLite() {\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\n  // your visualization goes here\n  vl.markBar({filled:true, color:'black'})\n  .data(co2ByFuelArray)\n  .encode(\n      vl.x().fieldN('Fuel').sort('none'),\n      vl.y().fieldQ('CO2'),\n      vl.color().fieldQ('CO2').scale({scheme: 'greys'}),\n      vl.tooltip('Tooltip'),\n  )\n  .width(500)\n  .height(300)\n  .render()\n  .then(viewElement => {\n    // render returns a promise to a DOM element containing the chart\n    // viewElement.value contains the Vega View object instance\n    document.getElementById('co2_by_fuel').appendChild(viewElement);\n  });\n}\n  \n"]}