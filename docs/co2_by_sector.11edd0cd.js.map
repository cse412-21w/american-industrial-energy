{"version":3,"sources":["co2_by_sector.js"],"names":["co2BySectorArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2BySectorData","then","data","forEach","d","push","drawPieVegaLite","markArc","encode","theta","fieldQ","sort","color","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;AAAA;;;;AAA6D;AAC7D,cAAkB;AACA;;;AAElB,IAAIA,gBAAgB,GAAG,EAAvB,EAA6B;;AAE7B,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,sBAAP,EAAwBC,IAAxB,CAA6B,UAASC,IAAT,EAAe;AAC1CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,gBAAgB,CAACqB,IAAjB,CAAsBD,CAAtB;AACD,GAFD;AAGAE,EAAAA,eAAe;AAChB,CALD;;AAQA,SAASA,eAAT,GAA2B;AACzB;AACA;AACAZ,EAAAA,EAAE,CAACa,OAAH,GACCL,IADD,CACMlB,gBADN,EAECwB,MAFD,CAGId,EAAE,CAACe,KAAH,GAAWC,MAAX,CAAkB,kBAAlB,EAAsCC,IAAtC,CAA2C,MAA3C,CAHJ,EAIIjB,EAAE,CAACkB,KAAH,GAAWF,MAAX,CAAkB,kBAAlB,EAAsCC,IAAtC,CAA2C,MAA3C,CAJJ,EAKIjB,EAAE,CAACL,OAAH,CAAW,CAAC,QAAD,EAAU,kBAAV,CAAX,CALJ,EAOCwB,KAPD,CAOO,GAPP,EAQCC,MARD,CAQQ,GARR,EASCC,MATD,GAUCd,IAVD,CAUM,UAAAe,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,CAAqDH,WAArD;AACD,GAdD;AAeD","file":"co2_by_sector.11edd0cd.js","sourceRoot":"../src","sourcesContent":["import co2BySectorData from '../static/co2_by_sector.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar co2BySectorArray = [];   // used to store data later\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(co2BySectorData).then(function(data) {\n  data.forEach(function(d){\n    co2BySectorArray.push(d);\n  })\n  drawPieVegaLite();\n});\n\n\nfunction drawPieVegaLite() {\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\n  // your visualization goes here\n  vl.markArc()\n  .data(co2BySectorArray)\n  .encode(\n      vl.theta().fieldQ('Contribution (%)').sort('none'),\n      vl.color().fieldQ('Contribution (%)').sort('none'),\n      vl.tooltip(['Sector','Contribution (%)']),\n  )\n  .width(300)\n  .height(300)\n  .render()\n  .then(viewElement => {\n    // render returns a promise to a DOM element containing the chart\n    // viewElement.value contains the Vega View object instance\n    document.getElementById('co2_by_sector').appendChild(viewElement);\n  });\n}\n  \n"]}