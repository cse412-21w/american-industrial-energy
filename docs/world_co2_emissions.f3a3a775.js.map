{"version":3,"sources":["world_co2_emissions.js"],"names":["co2EmissionsArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","co2EmissionsData","then","data","forEach","d","push","drawBarVegaLite","markBar","filled","color","encode","x","fieldQ","sort","y","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAAoE;AACpE,cAAkB;AACA;;;AAElB,IAAIA,iBAAiB,GAAG,EAAxB,EAA8B;;AAE9B,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,4BAAP,EAAyBC,IAAzB,CAA8B,UAASC,IAAT,EAAe;AAC3CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,iBAAiB,CAACqB,IAAlB,CAAuBD,CAAvB;AACD,GAFD;AAGAE,EAAAA,eAAe;AAChB,CALD;;AAQA,SAASA,eAAT,GAA2B;AACzB;AACA;AACAZ,EAAAA,EAAE,CAACa,OAAH,CAAW;AAACC,IAAAA,MAAM,EAAC,IAAR;AAAcC,IAAAA,KAAK,EAAC;AAApB,GAAX,EACCP,IADD,CACMlB,iBADN,EAEC0B,MAFD,CAGIhB,EAAE,CAACiB,CAAH,GAAOC,MAAP,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,MAA3B,CAHJ,EAIInB,EAAE,CAACoB,CAAH,GAAOF,MAAP,CAAc,KAAd,CAJJ,EAKIlB,EAAE,CAACL,OAAH,CAAW,CAAC,MAAD,EAAQ,KAAR,CAAX,CALJ,EAOC0B,KAPD,CAOO,GAPP,EAQCC,MARD,CAQQ,GARR,EASCC,MATD,GAUChB,IAVD,CAUM,UAAAiB,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,WAA/C,CAA2DH,WAA3D;AACD,GAdD;AAeD","file":"world_co2_emissions.f3a3a775.js","sourceRoot":"..\\src","sourcesContent":["import co2EmissionsData from '../static/world_co2_emissions.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar co2EmissionsArray = [];   // used to store data later\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(co2EmissionsData).then(function(data) {\r\n  data.forEach(function(d){\r\n    co2EmissionsArray.push(d);\r\n  })\r\n  drawBarVegaLite();\r\n});\r\n\r\n\r\nfunction drawBarVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  vl.markBar({filled:true, color:'black'})\r\n  .data(co2EmissionsArray)\r\n  .encode(\r\n      vl.x().fieldQ('year').sort('none'),\r\n      vl.y().fieldQ('co2'),\r\n      vl.tooltip(['year','co2']),\r\n  )\r\n  .width(450)\r\n  .height(450)\r\n  .render()\r\n  .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('world_co2_emissions').appendChild(viewElement);\r\n  });\r\n}\r\n  \r\n"]}