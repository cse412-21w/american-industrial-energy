{"version":3,"sources":["hist_co2_conc.js"],"names":["co2ConcArray","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","histCo2ConcData","then","data","forEach","d","push","drawLineVegaLite","markLine","color","encode","x","fieldT","y","fieldQ","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAAmE;AACnE,cAAkB;AACA;;;AAElB,IAAIA,YAAY,GAAG,EAAnB,EAAyB;;AAEzB,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,4BAAP,EAAwBC,IAAxB,CAA6B,UAASC,IAAT,EAAe;AAC1CA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBpB,IAAAA,YAAY,CAACqB,IAAb,CAAkBD,CAAlB;AACD,GAFD;AAGAE,EAAAA,gBAAgB;AACjB,CALD;;AAQA,SAASA,gBAAT,GAA4B;AAC1B;AACA;AACAZ,EAAAA,EAAE,CAACa,QAAH,CAAY;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAZ,EACCN,IADD,CACMlB,YADN,EAECyB,MAFD,CAGIf,EAAE,CAACgB,CAAH,GAAOC,MAAP,CAAc,MAAd,CAHJ,EAIIjB,EAAE,CAACkB,CAAH,GAAOC,MAAP,CAAc,WAAd,CAJJ,EAKInB,EAAE,CAACL,OAAH,CAAW,CAAC,MAAD,EAAQ,WAAR,CAAX,CALJ,EAOCyB,KAPD,CAOO,GAPP,EAQCC,MARD,CAQQ,GARR,EASCC,MATD,GAUCf,IAVD,CAUM,UAAAgB,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,CAAqDH,WAArD;AACD,GAdD;AAeD","file":"hist_co2_conc.b37f5ab0.js","sourceRoot":"../src","sourcesContent":["import histCo2ConcData from '../static/historical_co2_conc.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar co2ConcArray = [];   // used to store data later\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(histCo2ConcData).then(function(data) {\n  data.forEach(function(d){\n    co2ConcArray.push(d);\n  })\n  drawLineVegaLite();\n});\n\n\nfunction drawLineVegaLite() {\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\n  // your visualization goes here\n  vl.markLine({color:'firebrick'})\n  .data(co2ConcArray)\n  .encode(\n      vl.x().fieldT('Year'),\n      vl.y().fieldQ('CO2 (ppm)'),\n      vl.tooltip(['Year','CO2 (ppm)']),\n  )\n  .width(450)\n  .height(450)\n  .render()\n  .then(viewElement => {\n    // render returns a promise to a DOM element containing the chart\n    // viewElement.value contains the Vega View object instance\n    document.getElementById('hist_co2_conc').appendChild(viewElement);\n  });\n}\n  \n"]}